{"version":3,"sources":["components/Number.js","components/Operator.js","components/Screen.js","components/Calculator.js","App.js","index.js"],"names":["Number","className","onClick","props","value","this","Component","Operator","join","Screen","Calculator","state","first","operator","second","negate","handleNumberClick","number","setState","handleOperatorClick","parseFloat","getScreenValue","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ae164fa6.chunk.js","sourcesContent":["import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport \"./Buttons.scss\";\r\n\r\nclass Number extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"number\" onClick={() => this.props.onClick(this.props.value)}>\r\n        {this.props.value}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nNumber.propTypes = {\r\n  className: PropTypes.string,\r\n  onClick: PropTypes.func.isRequired,\r\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired\r\n}\r\n\r\nexport default Number;\r\n","import { Component } from 'react';\r\nimport \"./Buttons.scss\";\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Operator extends Component {\r\n  render() {\r\n    return (\r\n      <div className={[\"operator\", this.props.className].join(\" \")} onClick={() => this.props.onClick(this.props.value)}>\r\n        {this.props.value}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nOperator.propTypes = {\r\n  className: PropTypes.string,\r\n  onClick: PropTypes.func.isRequired,\r\n  value: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Operator;\r\n","import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport \"./Screen.scss\";\r\n\r\nclass Screen extends Component {\r\n  render() {\r\n    return <div className=\"screen\">{this.props.value}</div>;\r\n  }\r\n}\r\nScreen.propTypes = {\r\n  className: PropTypes.string,\r\n  value: PropTypes.oneOf([PropTypes.string, PropTypes.number])\r\n}\r\n\r\nexport default Screen;\r\n","import { Component } from \"react\";\r\n\r\nimport Number from \"./Number\";\r\nimport Operator from \"./Operator\";\r\nimport Screen from \"./Screen\";\r\nimport \"./Calculator.scss\";\r\n\r\nclass Calculator extends Component {\r\n  state = {\r\n    first: null,\r\n    operator: null,\r\n    second: null,\r\n    negate: null\r\n  };\r\n\r\n  handleNumberClick = (number) => {\r\n    if (!this.state.operator) {\r\n      if (number === \".\" && !this.state.first)\r\n        this.setState({ first: `0.` });\r\n      else\r\n        this.setState({ first: `${this.state.first || \"\"}${number}` });\r\n    } else {\r\n      if (number === \".\" && !this.state.second)\r\n        this.setState({ first: `0.` });\r\n      else\r\n        this.setState({ second: `${this.state.second || \"\"}${number}` });\r\n    }\r\n  };\r\n\r\n  // I am not quite sure why Math.js was suggested in the section.\r\n  // Vanilla parseFloat does the job well\r\n  \r\n  get first() {\r\n    return parseFloat(this.state.first);\r\n  }\r\n\r\n  get second() {\r\n    return parseFloat(this.state.second);\r\n  }\r\n\r\n  handleOperatorClick = (operator) => {\r\n    if (operator === \"-\" && (!this.state.first || (this.state.first && this.state.operator && !this.state.second))) {\r\n      const first = parseFloat(this.state.first);\r\n      const second = parseFloat(this.state.second);\r\n      if (!this.state.operator && !first) {\r\n        this.setState({ first: `-` });\r\n      } else if (!second) {\r\n        this.setState({ second: `-` });\r\n      }\r\n    }\r\n    else if (operator === \"=\") {\r\n      if (this.state.operator === \"+\") {\r\n        this.setState({ operator: null, first: this.first + this.second, second: null });\r\n      } else if (this.state.operator === \"/\") {\r\n        this.setState({ operator: null, first: this.first / this.second, second: null });\r\n      } else if (this.state.operator === \"-\") {\r\n        this.setState({ operator: null, first: this.first - this.second, second: null });\r\n      } else if (this.state.operator === \"x\") {\r\n        this.setState({ operator: null, first: this.first * this.second, second: null });\r\n      }\r\n    } else if (operator === \"clear\") {\r\n      this.setState({ first: null, second: null, operator: null });\r\n    } else {\r\n      this.setState({ operator });\r\n    }\r\n  };\r\n\r\n  getScreenValue = () => this.state.second || this.state.first;\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"calculator\">\r\n          <Screen value={this.getScreenValue()} />\r\n          <div>\r\n            <div className=\"keypad\">\r\n              <Number value={7} onClick={this.handleNumberClick} />\r\n              <Number value={8} onClick={this.handleNumberClick} />\r\n              <Number value={9} onClick={this.handleNumberClick} />\r\n              <Number value={4} onClick={this.handleNumberClick} />\r\n              <Number value={5} onClick={this.handleNumberClick} />\r\n              <Number value={6} onClick={this.handleNumberClick} />\r\n              <Number value={1} onClick={this.handleNumberClick} />\r\n              <Number value={2} onClick={this.handleNumberClick} />\r\n              <Number value={3} onClick={this.handleNumberClick} />\r\n              <Number value={0} onClick={this.handleNumberClick} />\r\n              <Number value=\".\" onClick={this.handleNumberClick} />\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <div className=\"operators\">\r\n              <Operator value=\"+\" onClick={this.handleOperatorClick} />\r\n              <Operator value=\"/\" onClick={this.handleOperatorClick} />\r\n              <Operator value=\"x\" onClick={this.handleOperatorClick} />\r\n              <Operator value=\"-\" onClick={this.handleOperatorClick} />\r\n              <Operator value=\"clear\" onClick={this.handleOperatorClick} />\r\n              <Operator className=\"equal\" value=\"=\" onClick={this.handleOperatorClick} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Calculator;\r\n","import './App.scss';\r\nimport Calculator from 'components/Calculator';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Calculator />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}