{"version":3,"sources":["components/documentation/DocumentComponent.js","components/generic/Button/Button.js","classes/Duration.js","components/generic/Input/Input.js","components/generic/TimeComponent/TimeComponent.js","components/generic/DisplayTime/DisplayTime.js","components/generic/Panel/Panel.js","components/generic/ProgressBar/ProgressBar.js","components/generic/ProgressCircle/ProgressCircle.js","views/DocumentationView.js","components/timers/Stopwatch.js","components/timers/Countdown.js","components/timers/XY.js","components/timers/Tabata.js","views/TimersView.js","App.js","index.js"],"names":["DocumentComponent","className","this","props","title","component","propDocs","map","doc","index","prop","description","type","defaultValue","React","Component","Button","disabled","onClick","children","tooltip","join","defaultProps","console","log","SECOND","MINUTE","HOUR","DAY","YEAR","MONTH","TIME_ENUM","MILLISECOND","Duration","years","months","days","hours","minutes","seconds","milliseconds","rounds","tickSize","countdownMode","intervalFunctions","_years","_months","_days","_hours","_minutes","_seconds","_milliseconds","_currentRound","_roundsCompleted","countdownInterval","forEach","Object","defineProperty","get","set","value","isNaN","Error","initializeTime","millisecondsTotal","_currentTime","_totalTime","_roundTime","setInterval","tick","func","done","clear","clearInterval","intervalFunction","push","Math","floor","Input","min","max","onChange","TimeComponent","prependZero","label","showColon","readOnly","classList","filter","x","length","DisplayTime","state","duration","setState","currentHours","currentMinutes","currentSeconds","currentMilliseconds","pushIntervalFunction","durationTick","bind","name","i","Panel","ProgressBar","progress","position","background","ProgressCircle","size","thickness","Container","styled","div","Documentation","document","body","add","remove","unpack","propsArray","Stopwatch","stopwatch","precentDone","Countdown","XY","Tabata","tabata","App","timers","C","timer","href","to","path","DocumentationView","TimersView","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.4c0d7772.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./DocumentComponent.scss\";\r\n\r\nclass DocumentComponent extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\" table-wrapper shadow-6 rounded m-b-4 \">\r\n        <h4 className=\"text-center\">{this.props.title}</h4>\r\n        <div className=\"\">\r\n          <div className=\"component-container m-r-2\">{this.props.component}</div>\r\n          <table className=\"sass-table\">\r\n            <thead>\r\n              <tr>\r\n                <th>Prop</th>\r\n                <th>Description</th>\r\n                <th>Type</th>\r\n                <th>Default value</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {this.props.propDocs.map((doc, index) => {\r\n                return (\r\n                  <tr key={index}>\r\n                    <td>{doc.prop}</td>\r\n                    <td>{doc.description}</td>\r\n                    <td>{doc.type}</td>\r\n                    <td className=\"code-font\">\r\n                      {doc.defaultValue}\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DocumentComponent;\r\n","import { Component } from 'react';\r\nimport './Button.scss';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Button extends Component {\r\n\r\n  render() {\r\n    const {disabled, onClick, children, tooltip, className} = this.props;\r\n    return <button \r\n      data-tooltip-bottom={tooltip}\r\n      className={['btn', className].join(\" \")} \r\n      disabled={disabled} \r\n      onClick={onClick}>\r\n        {children ? children : \"Button\"}\r\n    </button>;\r\n  }\r\n}\r\n\r\nexport default Button;\r\n\r\nButton.propTypes = {\r\n  disabled: PropTypes.bool,\r\n  className: PropTypes.string,\r\n  tooltip: PropTypes.string,\r\n  onClick: PropTypes.func\r\n}\r\n\r\nButton.defaultProps = {\r\n  disabled: false,\r\n  className: \"primary bold raised\",\r\n  tooltip: null,\r\n  onClick: ()=>{ console.log(\"button clicked!\"); }\r\n}","\r\nconst MILLISECOND = 1;\r\nconst SECOND = 1000 * MILLISECOND;\r\nconst MINUTE = SECOND * 60;\r\nconst HOUR = MINUTE * 60;\r\nconst DAY = 24 * HOUR;\r\nconst YEAR = 365 * DAY;\r\nconst MONTH = YEAR / 12;\r\n\r\n\r\n// Time Enums in milliseconds\r\nexport const TIME_ENUM = {\r\n    MILLISECOND: MILLISECOND,\r\n    SECOND: SECOND,\r\n    MINUTE: MINUTE,\r\n    HOUR: HOUR,\r\n    DAY: DAY,\r\n    YEAR: YEAR,\r\n    MONTH: MONTH\r\n}\r\n\r\n// Creates Duration Object\r\nexport class Duration {\r\n    constructor({\r\n        years = 0,\r\n        months = 0,\r\n        days = 0,\r\n        hours = 0,\r\n        minutes = 0,\r\n        seconds = 0,\r\n        milliseconds = 0,\r\n        rounds = 1,\r\n        tickSize = MILLISECOND, // sets the amount increased/decreased on each tick\r\n        countdownMode = true, // when set to true, we count down to passed time values\r\n        // and when countdownMode is true, we count up to the passed value\r\n        intervalFunctions = [], // functions which are executed during each tick of the timer\r\n    } = {}) {\r\n        // Convert args to milliseconds\r\n\r\n        this._years = years;\r\n        this._months = months;\r\n        this._days = days;\r\n        this._hours = hours;\r\n        this._minutes = minutes;\r\n        this._seconds = seconds;\r\n        this._milliseconds = milliseconds;\r\n        this.rounds = this._currentRound = rounds;\r\n        this._roundsCompleted = 0;\r\n        this.tickSize = tickSize;\r\n        this.countdownInterval = null;\r\n        this.intervalFunctions = [...intervalFunctions];\r\n        this.countdownMode = countdownMode;\r\n\r\n        // defines getters and setters for time components\r\n        [\"years\", \"months\", \"days\", \"hours\", \"minutes\", \"seconds\", \"milliseconds\"].forEach(\r\n            prop => {\r\n                Object.defineProperty(this, prop, {\r\n                    get: function () {\r\n                        return this[`_${prop}`];\r\n                    },\r\n                    set: function (value) {\r\n                        if (isNaN(value) || (!isNaN(value) && value < 0))\r\n                            throw new Error(`${prop} paramter is not a number greater or equal to 0`);\r\n                        this[`_${prop}`] = value;\r\n                    }\r\n                });\r\n            }\r\n        )\r\n        this.initializeTime();\r\n    }\r\n\r\n    initializeTime() {\r\n        // Converts all time components to milliseconds;\r\n        let millisecondsTotal = 0\r\n            + this._milliseconds\r\n            + this._seconds * SECOND\r\n            + this._minutes * MINUTE\r\n            + this._hours * HOUR\r\n            + this._days * DAY\r\n            + this._months * MONTH\r\n            + this._years * YEAR;\r\n\r\n        if (this.countdownMode) {\r\n            // Counting down from Start Time to 0\r\n            this._currentTime = millisecondsTotal;\r\n        } else {\r\n            // Counting up form 0 to End Time\r\n            this._currentTime = 0;\r\n        }\r\n        this._currentRound = this.rounds;\r\n        this._roundsCompleted = 0;\r\n        this._totalTime = millisecondsTotal * this.rounds;\r\n        this._roundTime = millisecondsTotal;\r\n    }\r\n\r\n    tick() {\r\n        // increases or decreases time on each tick\r\n        if (this.countdownMode) {\r\n            // COUNTING DOWN\r\n            this._currentTime -= this.tickSize;\r\n            if (this._currentTime <= 0) {\r\n                if (this._currentRound > 0) this._currentRound--;\r\n                if (this._currentRound > 0) {\r\n                    this._currentTime = this._roundTime - this._currentTime;\r\n                } else {\r\n                    this._currentTime = 0;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            // CONTING UP\r\n            this._currentTime += this.tickSize;\r\n            if (this._currentTime >= this._roundTime) {\r\n                if (this._currentRound > 0) this._currentRound--;\r\n                if (this._currentRound > 0) {\r\n                    this._roundsCompleted++;\r\n                    this._currentTime = this._currentTime - this._roundTime;\r\n                } else {\r\n                    this._currentTime = this._roundTime;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    start() {\r\n        if (this.countdownInterval === null) {\r\n            this.initializeTime();\r\n            this.countdownInterval = setInterval(() => {\r\n                this.tick();\r\n                this.intervalFunctions.forEach(func => { func(this); });\r\n                if (this.done) this.clear();\r\n            }, this.tickSize);\r\n        }\r\n    }\r\n\r\n    clear() {\r\n        clearInterval(this.countdownInterval);\r\n        this.countdownInterval = null;\r\n    }\r\n\r\n    pushIntervalFunction(intervalFunction) {\r\n        this.intervalFunctions.push(intervalFunction);\r\n    }\r\n\r\n    get roundDone() {\r\n        return Math.floor((10000 * (this._currentTime / this._roundTime)));\r\n    }\r\n\r\n    get precentDone() {\r\n        return Math.floor((10000 *\r\n            (((this.countdownMode ? this._currentRound - 1 : this._roundsCompleted) *\r\n                this._roundTime + this._currentTime) / this._totalTime)));\r\n    }\r\n\r\n    get currentYears() {\r\n        return Math.floor(this._currentTime / YEAR);\r\n    }\r\n\r\n    get currentMonths() {\r\n        return Math.floor((this._currentTime % YEAR) / MONTH);\r\n    }\r\n\r\n    get currentDays() {\r\n        return Math.floor((this._currentTime % MONTH) / DAY);\r\n    }\r\n\r\n    get currentHours() {\r\n        return Math.floor((this._currentTime % DAY) / HOUR);\r\n    }\r\n\r\n    get currentMinutes() {\r\n        return Math.floor((this._currentTime % HOUR) / MINUTE);\r\n    }\r\n\r\n    get currentSeconds() {\r\n        return Math.floor((this._currentTime % MINUTE) / SECOND);\r\n    }\r\n\r\n    get currentMilliseconds() {\r\n        return Math.floor((this._currentTime % SECOND) / MILLISECOND);\r\n    }\r\n\r\n    get done() {\r\n        // tells weather times is finished\r\n        if (this.countdownMode)\r\n            return this._currentRound === 0 && this._currentTime === 0;\r\n        return this._currentRound === 0 && this._currentTime === this._roundTime;\r\n    }\r\n\r\n    static get TIME_ENUM() {\r\n        return TIME_ENUM;\r\n    }\r\n}","import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Input.scss';\r\n\r\nclass Input extends Component {\r\n  render() {\r\n    const { type, value, disabled, className, min, max, onChange } = this.props;\r\n    return <input className={[\"timer-input timer-font\", className].join(\" \")} \r\n      type={type} \r\n      value={value} \r\n      min={min}\r\n      max={max}\r\n      disabled={disabled}\r\n      onChange={onChange}></input>;\r\n  }\r\n}\r\nInput.propTypes = {\r\n  type: PropTypes.string,\r\n  value: PropTypes.oneOfType([\r\n    PropTypes.string,\r\n    PropTypes.number\r\n  ]).isRequired,\r\n  disabled: PropTypes.bool,\r\n  min: PropTypes.number,\r\n  max: PropTypes.number,\r\n  onChange: PropTypes.func\r\n}\r\n\r\nInput.defaultProps = {\r\n  type: \"number\",\r\n  disabled: false,\r\n  min: 0,\r\n  onChange: ()=>{\r\n    console.log(\"onChange firing\");\r\n  }\r\n}\r\n\r\nexport default Input;","import { Component } from 'react';\r\nimport Input from './../Input/Input.js';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './TimeComponent.scss';\r\n\r\nclass TimeComponent extends Component {\r\n    render() {\r\n        \r\n        const { prependZero, value, label, className, showColon, readOnly } = this.props;\r\n\r\n        // Create CSS class string from array\r\n        const classList = ['time-component', \r\n                            className, \r\n                            showColon ? \"colon\" : \"no-colon\", \r\n                            readOnly ? \"readonly-mode\" : \"input-mode\"]\r\n                            .filter(x => typeof x === 'string' && x.length > 0)\r\n                            .join(\" \");\r\n\r\n        return <div className={classList}>\r\n            {/* Static - non-editable part of component. Only shows when readOnly is set to true*/}\r\n            { readOnly &&  <div>\r\n                {prependZero && value < 10 &&\r\n                    <span className='timer-font zero'>0</span>\r\n                }\r\n                <span className={'timer-font' + (value === 0 ? ' zero' : '')}>{value}</span></div>\r\n                }\r\n            {/* Editable part of component, shown when readOnly is false */}\r\n            { !readOnly && <div>\r\n                <Input value={value}></Input>\r\n            </div> }\r\n            {label &&\r\n                <div className=\"label\">{label}</div>\r\n            }\r\n        </div>;\r\n    }\r\n}\r\n\r\nTimeComponent.propTypes = {\r\n    value: PropTypes.number,\r\n    prependZero: PropTypes.bool,\r\n    label: PropTypes.string,\r\n    className: PropTypes.string,\r\n    showColon: PropTypes.bool,\r\n    readOnly: PropTypes.bool\r\n}\r\n\r\nTimeComponent.defaultProps = {\r\n    value: 0,\r\n    prependZero: false,\r\n    label: null,\r\n    className: null,\r\n    showColon: false,\r\n    readOnly: true\r\n}\r\n\r\nexport default TimeComponent;","import { Component } from 'react';\r\nimport { Duration } from '../../../classes/Duration';\r\nimport './DisplayTime.scss';\r\nimport TimeComponent from '../TimeComponent/TimeComponent';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass DisplayTime extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      hours: 0,\r\n      minutes: 0,\r\n      seconds: 0,\r\n      milliseconds: 0,\r\n      duration: props.duration\r\n    }\r\n  }\r\n\r\n  durationTick(duration) {\r\n    this.setState({\r\n      hours: duration.currentHours,\r\n      minutes: duration.currentMinutes,\r\n      seconds: duration.currentSeconds,\r\n      milliseconds: duration.currentMilliseconds\r\n    });\r\n  }\r\n\r\n  componentDidMount(){\r\n    const { duration } = this.state;\r\n    if (duration) duration.pushIntervalFunction(this.durationTick.bind(this));\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const { duration } = this.state;\r\n    duration.clear();\r\n  }\r\n\r\n  render() {\r\n    const { className, readOnly } = this.props;\r\n\r\n    // Duration class also support Years, Months, Days but these time units aren't appropriate for timer use\r\n    const components = [\r\n      { label: \"h\", prependZero: true, name: \"hours\" },\r\n      { label: \"m\", prependZero: true, name: \"minutes\" },\r\n      { label: \"s\", prependZero: true, name: \"seconds\" },\r\n      { label: \"ms\", prependZero: false, name: \"milliseconds\" }\r\n    ]\r\n\r\n    return <div className={['time-components', className].join(\" \")}>\r\n      {components.map((component, i) =>\r\n        <TimeComponent value={this.state[component.name]}\r\n          key={component.label}\r\n          label={component.label}\r\n          prependZero={component.prependZero}\r\n          readOnly={readOnly}\r\n          showColon={i !== 0}></TimeComponent>)}\r\n    </div>;\r\n  }\r\n}\r\n\r\nDisplayTime.propTypes = {\r\n  duration: PropTypes.instanceOf(Duration),\r\n  className: PropTypes.string,\r\n  readOnly: PropTypes.bool\r\n}\r\n\r\nDisplayTime.defaultProps = {\r\n  duration: new Duration(0),\r\n  className: null,\r\n  readOnly: false\r\n}\r\n\r\nexport default DisplayTime;","import { Component } from 'react';\r\nimport './Panel.scss';\r\n\r\nclass Panel extends Component {\r\n  render() {\r\n    const { className } = this.props;\r\n    return <div className={['relative rounded p-4', className].join(\" \")}>{this.props.children}</div>;\r\n  }\r\n}\r\n\r\nexport default Panel;","import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './ProgressBar.scss';\r\n\r\nclass ProgressBar extends Component {\r\n    render() {\r\n        const { progress, position, className, background } = this.props;\r\n        return <div className={['ProgressBar', className, position].join(\" \")}>\r\n            <div className={['progress', \"progress-\" + progress, background].join(\" \")}></div>\r\n        </div>;\r\n    }\r\n}\r\n\r\nProgressBar.propTypes = {\r\n    progress: PropTypes.number,\r\n    position: PropTypes.oneOf([\"bottom\", \"top\", \"left\", \"right\", null]),\r\n    className: PropTypes.string,\r\n    background: PropTypes.string\r\n}\r\n\r\nProgressBar.defaultProps = {\r\n    progress: 0,\r\n    position: null,\r\n    className: null,\r\n    background: \"gradient-primary-light-danger\"\r\n}\r\n\r\nexport default ProgressBar;","import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './ProgressCircle.scss';\r\n\r\nclass ProgressCircle extends Component {\r\n    render() {\r\n        const { progress, className,  children, size, thickness } = this.props;\r\n        return <div className={[`size-${size} shadow-6`, `thickness-${thickness}`, 'ProgressCircle', className].join(\" \")}>\r\n            <div className={['overlay', \"progress-\" + progress].join(\" \")}>\r\n                <div className={['InnerCircle'].join(\" \")}>\r\n                    {children}\r\n                </div>\r\n            </div>\r\n        </div>;\r\n    }\r\n}\r\n\r\nProgressCircle.propTypes = {\r\n    progress: PropTypes.number,\r\n    className: PropTypes.string,\r\n    thickness: PropTypes.oneOf([\"xs\", \"sm\", \"md\", \"lg\", \"xl\", \"xxl\"]),\r\n    size: PropTypes.oneOf([\"xs\", \"sm\", \"md\", \"lg\", \"xl\", \"xxl\"])\r\n}\r\n\r\nProgressCircle.defaultProps = {\r\n    progress: 0,\r\n    className: \"embedded\",\r\n    thickness: \"sm\",\r\n    size: \"lg\"\r\n}\r\n\r\nexport default ProgressCircle;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport DocumentComponent from \"../components/documentation/DocumentComponent\";\r\nimport Button from \"../components/generic/Button/Button\";\r\nimport DisplayTime from \"../components/generic/DisplayTime/DisplayTime\";\r\nimport Input from \"../components/generic/Input/Input\";\r\nimport Panel from \"../components/generic/Panel/Panel\";\r\nimport ProgressBar from \"../components/generic/ProgressBar/ProgressBar\";\r\nimport ProgressCircle from \"../components/generic/ProgressCircle/ProgressCircle\";\r\nimport TimeComponent from \"../components/generic/TimeComponent/TimeComponent\";\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  width: 100%;\r\n`;\r\n\r\nclass Documentation extends React.Component {\r\n  componentDidMount() {\r\n    document.body.classList.add(\"white-bg\");\r\n  }\r\n  componentWillUnmount() {\r\n    document.body.classList.remove(\"white-bg\");\r\n  }\r\n  render() {\r\n    // Unpacks array into props used by propDocs prop of DocumentComponent\r\n    // Order of props is important\r\n    const unpack = (propsArray) => {\r\n      const [prop, description, type, defaultValue] = propsArray;\r\n      return { prop, description, type, defaultValue };\r\n    }\r\n    return (\r\n      <Container>\r\n        <div>\r\n          <h1 className=\"text-center\">Documentation</h1>\r\n          <DocumentComponent\r\n            title=\"<Button></Button>\"\r\n            component={<Button />}\r\n            propDocs={[\r\n              unpack([\"disabled\", \"disables / enables button\", \"bool\", \"false\"]),\r\n              unpack([\"className\", \"sets HTML class name\", \"string\", \"primary bold raised\"]),\r\n              unpack([\"tooltip\", \"adds on hover tooltip\", \"string\", \"null\"]),\r\n              unpack([\"onClick\", \"on click method\", \"func\", \"()=>{ console.log('button clicked!'); }\"]),\r\n            ]}\r\n          />\r\n          <DocumentComponent\r\n            title=\"<DisplayTime />\"\r\n            component={<DisplayTime className=\"dark\" />}\r\n            propDocs={[\r\n              unpack([\"duration\", \"duration object\", \"Duration\", \"new Duration(0)\"]),\r\n              unpack([\"className\", \"sets HTML class name\", \"string\", \"null\"]),\r\n              unpack([\"readOnly\", \"enable user editing of values when set to true\", \"bool\", \"true\"])\r\n            ]}\r\n          />\r\n          <DocumentComponent\r\n            title=\"<Input />\"\r\n            component={<Input value={5} />}\r\n            propDocs={[\r\n              unpack([\"type\", \"sets HTML input type\", \"string\", \"number\"]),\r\n              unpack([\"value\", \"sets HTML value attribute\", \"string | number\", \"N/A\"]),\r\n              unpack([\"disabled\", \"disables / enables input\", \"bool\", \"false\"]),\r\n              unpack([\"min\", \"sets HTML min attribute\", \"number\", \"0\"]),\r\n              unpack([\"max\", \"sets HTML max attribute\", \"number\", \"N/A\"]),\r\n              unpack([\"onChange\", \"onChange handler function. Fires when input is changed\", \"func\", \"()=>{ console.log(\\\"onChange firing\\\");}\"])\r\n            ]}\r\n          />\r\n          <DocumentComponent\r\n            title=\"<Panel></Panel>\"\r\n            component={<Panel className=\"shadow-6 round\">Hello Panel!</Panel>}\r\n            propDocs={[\r\n              unpack([\"className\", \"sets HTML class name\", \"string\", \"null\"])\r\n            ]}\r\n          />\r\n          <DocumentComponent\r\n            title=\"<ProgressCircle></ProgressCircle>\"\r\n            component={<ProgressCircle size=\"sm\" progress={4534} className=\"embedded text-light text-center\">Hello Circle!</ProgressCircle>}\r\n            propDocs={[\r\n              unpack([\"progress\", \"sets progress amount\", \"number between 0 and 10000 where 10000 is 100%\", \"0\"]),\r\n              unpack([\"className\", \"sets HTML class name\", \"string\", \"null\"]),\r\n              unpack([\"thickness\", \"sets thickness of loader line\", 'string one of \"xs\", \"sm\", \"md\", \"lg\", \"xl\", \"xxl', \"sm\"]),\r\n              unpack([\"thickness\", \"sets size of circle\", 'string one of \"xs\", \"sm\", \"md\", \"lg\", \"xl\", \"xxl', \"lg\"])\r\n            ]}\r\n          />\r\n          <DocumentComponent\r\n            title=\"<ProgressBar />\"\r\n            component={<ProgressBar className=\"width-100px shadow-6\" progress={54} />}\r\n            propDocs={[\r\n              unpack([\"className\", \"sets HTML class name\", \"string\", \"null\"]),\r\n              unpack([\"position\", \"sets absolute position to one side of parent container\", \"string one of 'bottom', 'top', 'left', 'right', null\", \"null\"]),\r\n              unpack([\"progress\", \"sets progress amount\", \"number\", \"0\"]),\r\n              unpack([\"background\", \"sets CSS class for background of the filler bar\", \"string\", \"gradient-primary-light-danger\"])\r\n            ]}\r\n          />\r\n          <DocumentComponent\r\n            title=\"<TimeComponent />\"\r\n            component={<TimeComponent className=\"shadow-6 text-center dark\" label=\"label\" prependZero={true} value={1} />}\r\n            propDocs={[\r\n              unpack([\"value\", \"sets value shown in time component\", \"number\", \"0\"]),\r\n              unpack([\"prependZero\", \"prepends zero to value if value lower than 10 when in readonly mode\", \"bool\", \"false\"]),\r\n              unpack([\"showColon\", \"adds ':' to the left of component\", \"bool\", \"false\"]),\r\n              unpack([\"label\", \"adds label under the value\", \"string\", \"null\"]),\r\n              unpack([\"readOnly\", \"when set to false, value can be changed by user\", \"bool\", \"true\"])\r\n            ]}\r\n          />\r\n        </div>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Documentation;\r\n","import React from \"react\";\r\nimport Panel from \"./../generic/Panel/Panel\";\r\nimport Button from \"./../generic/Button/Button\";\r\nimport DisplayTime from \"./../generic/DisplayTime/DisplayTime\";\r\nimport ProgressCircle from \"./../generic/ProgressCircle/ProgressCircle\";\r\nimport { Duration } from '../../classes/Duration';\r\n\r\nclass Stopwatch extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      progress: 9464,\r\n      stopwatch: new Duration(\r\n        {\r\n          rounds: 1,\r\n          seconds: 10,\r\n          tickSize: Duration.TIME_ENUM.MILLISECOND * 52,\r\n          countdownMode: false,\r\n          intervalFunctions: [(duration) => {\r\n            if (this.state.progress !== duration.precentDone)\r\n              this.setState({\r\n                progress: duration.precentDone\r\n              });\r\n          }]\r\n        })\r\n    }\r\n  }\r\n\r\n  componentDidMount() { \r\n    // This code was added for development purposes, starts the Timer\r\n    // Timer should be static for first deliverable\r\n    // const { stopwatch } = this.state;\r\n    // if (stopwatch) stopwatch.start();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n        // This code was added for development purposes, clears the Timer\r\n    // Timer should be static for first deliverable\r\n    // const { stopwatch } = this.state;\r\n    // if (stopwatch) stopwatch.clear();\r\n  }\r\n\r\n  render() {\r\n    const { title } = this.props;\r\n    const { stopwatch, progress } = this.state;\r\n    return <Panel>\r\n      <ProgressCircle progress={progress}>\r\n        <div>\r\n          <div className=\"text-center m-0\">\r\n            <h5 className=\"text-center weight-100 gradient-code-secondary-clip \">{title}</h5>\r\n          </div>\r\n          <DisplayTime className=\"m-t-3\" duration={stopwatch}></DisplayTime>\r\n          <div className=\"ButtonsPanel\">\r\n            <Button className=\"text-primary bold flat RoundButton\">\r\n              <span className=\"material-icons size-48\">play_arrow</span>\r\n            </Button>\r\n            <Button className=\"text-danger bold flat RoundButton\">\r\n              <span className=\"material-icons size-48\"> clear</span>\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </ProgressCircle>\r\n    </Panel>;\r\n  }\r\n}\r\n\r\nexport default Stopwatch;\r\n","import React from \"react\";\r\nimport Panel from \"./../generic/Panel/Panel\";\r\nimport Button from \"./../generic/Button/Button\";\r\nimport DisplayTime from \"./../generic/DisplayTime/DisplayTime\";\r\nimport ProgressCircle from \"./../generic/ProgressCircle/ProgressCircle\";\r\nimport { Duration } from '../../classes/Duration';\r\n\r\nclass Countdown extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      progress: 5153,\r\n      duration: new Duration(\r\n        {\r\n          rounds: 3,\r\n          minutes: 0,\r\n          seconds: 10,\r\n          tickSize:\r\n            Duration.TIME_ENUM.MILLISECOND * 52,\r\n          intervalFunctions: [(duration) => {\r\n            if (this.state.progress !== duration.precentDone)\r\n              this.setState({\r\n                progress: duration.precentDone\r\n              });\r\n          }]\r\n        })\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    // This code was added for development purposes, starts the Timer countdown\r\n    // Timer should be static for first deliverable\r\n    // const { duration } = this.state;\r\n    // if (duration) duration.start();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    // This code was added for development purposes, clears the Timer countdown\r\n    // Timer should be static for first deliverable\r\n    // const { duration } = this.state;\r\n    // if (duration) duration.clear();\r\n  }\r\n\r\n  render() {\r\n    const { title } = this.props;\r\n    const { progress, duration } = this.state;\r\n    return <Panel>\r\n      <ProgressCircle progress={progress}>\r\n        <div>\r\n          <div className=\"text-center m-0\">\r\n            <h5 className=\"text-center weight-100 gradient-code-secondary-clip \">{title}</h5>\r\n          </div>\r\n          <DisplayTime className=\"m-t-3\" duration={duration}></DisplayTime>\r\n          <div className=\"ButtonsPanel\">\r\n            <Button className=\"text-primary bold flat RoundButton\">\r\n              <span className=\"material-icons size-48\">play_arrow</span>\r\n            </Button>\r\n            <Button className=\"text-danger bold flat RoundButton\">\r\n              <span className=\"material-icons size-48\"> clear</span>\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </ProgressCircle>\r\n    </Panel>;\r\n  }\r\n}\r\n\r\nexport default Countdown;\r\n","import React from \"react\";\r\nimport Panel from \"./../generic/Panel/Panel\";\r\nimport Button from \"./../generic/Button/Button\";\r\nimport DisplayTime from \"./../generic/DisplayTime/DisplayTime\";\r\nimport ProgressCircle from \"./../generic/ProgressCircle/ProgressCircle\";\r\nimport { Duration } from '../../classes/Duration';\r\nimport TimeComponent from \"../generic/TimeComponent/TimeComponent\";\r\n\r\nclass XY extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      progress: 8754,\r\n      duration: new Duration(\r\n        {\r\n          rounds: 3,\r\n          minutes: 0,\r\n          seconds: 10,\r\n          tickSize:\r\n            Duration.TIME_ENUM.MILLISECOND * 52,\r\n          intervalFunctions: [(duration) => {\r\n            if (this.state.progress !== duration.precentDone)\r\n              this.setState({\r\n                progress: duration.precentDone\r\n              });\r\n          }]\r\n        })\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    // This code was added for development purposes, clears the Timer countdown\r\n    // Timer should be static for first deliverable\r\n    // const { duration } = this.state;\r\n    // if (duration) duration.start();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    // This code was added for development purposes, clears the Timer\r\n    // Timer should be static for first deliverable\r\n    // const { duration } = this.state;\r\n    // if (duration) duration.clear();\r\n  }\r\n\r\n  render() {\r\n    const { title } = this.props;\r\n    const { progress, duration } = this.state;\r\n    return <Panel>\r\n      <ProgressCircle progress={progress} >\r\n        <div>\r\n          <div className=\"text-center m-x-0 m-t-0 m-b-1\">\r\n            <h5 className=\"text-center weight-100 gradient-code-secondary-clip m-b-2\">{title}</h5>\r\n          </div>\r\n          <ProgressCircle progress={4433} className=\"embedded\" size=\"sm\" thickness=\"xs\">\r\n              <TimeComponent value={5} label=\"round\" readOnly={false}></TimeComponent>\r\n            </ProgressCircle>\r\n          <DisplayTime className=\"m-t-1\" duration={duration}></DisplayTime>\r\n          <div className=\"ButtonsPanel\">\r\n            <Button className=\"text-primary bold flat RoundButton\">\r\n              <span className=\"material-icons size-48\">play_arrow</span>\r\n            </Button>\r\n            <Button className=\"text-danger bold flat RoundButton\">\r\n              <span className=\"material-icons size-48\"> clear</span>\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </ProgressCircle>\r\n    </Panel>;\r\n  }\r\n}\r\n\r\nexport default XY;\r\n","import React from \"react\";\r\nimport Panel from \"./../generic/Panel/Panel\";\r\nimport Button from \"./../generic/Button/Button\";\r\nimport ProgressCircle from \"./../generic/ProgressCircle/ProgressCircle\";\r\nimport { Duration } from '../../classes/Duration';\r\nimport TimeComponent from \"../generic/TimeComponent/TimeComponent\";\r\nimport \"./Tabata.scss\";\r\n\r\nclass Tabata extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      progress: 1343,\r\n      tabata: new Duration(\r\n        {\r\n          rounds: 1,\r\n          seconds: 10,\r\n          tickSize: Duration.TIME_ENUM.MILLISECOND * 52,\r\n          countdownMode: true,\r\n          intervalFunctions: [(duration) => {\r\n            if (this.state.progress !== duration.precentDone)\r\n              this.setState({\r\n                progress: duration.precentDone\r\n              });\r\n          }]\r\n        })\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    // This code was added for development purposes, starts the Timer countdown\r\n    // const { tabata } = this.state;\r\n    // if (tabata) tabata.start();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n  // This code was added for development purposes, stop the Timer countdown\r\n  //   const { tabata } = this.state;\r\n  //   if (tabata) tabata.clear();\r\n  }\r\n\r\n  render() {\r\n    const { title } = this.props;\r\n    const { progress } = this.state;\r\n    return <Panel>\r\n      <ProgressCircle progress={progress}>\r\n        <div className=\"tabata\">\r\n          <div className=\"text-center m-0\">\r\n            <h5 className=\"text-center weight-100 gradient-code-secondary-clip \">{title}</h5>\r\n          </div>\r\n          <div className=\"tabata-progress-panel m-t-3\">\r\n              <ProgressCircle progress={8700} size=\"xs\" thickness=\"xs\" className=\"embedded\">\r\n                <TimeComponent label=\"round\" prependZero={true} value={3} readOnly={false} ></TimeComponent>\r\n              </ProgressCircle>\r\n              <ProgressCircle progress={5700} size=\"xs\" thickness=\"xs\" className=\"embedded\">\r\n                <TimeComponent label=\"work\" prependZero={true} value={26} readOnly={false}></TimeComponent>\r\n              </ProgressCircle>\r\n              <ProgressCircle progress={10000} size=\"xs\" thickness=\"xs\" className=\"embedded\">\r\n                <TimeComponent label=\"rest\" prependZero={true} readOnly={false} ></TimeComponent>\r\n              </ProgressCircle>\r\n            </div>\r\n          <div className=\"ButtonsPanel\">\r\n            <Button className=\"text-primary bold flat RoundButton\">\r\n              <span className=\"material-icons size-48\">play_arrow</span>\r\n            </Button>\r\n            <Button className=\"text-danger bold flat RoundButton\">\r\n              <span className=\"material-icons size-48\"> clear</span>\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </ProgressCircle>\r\n    </Panel>;\r\n  }\r\n}\r\n\r\nexport default Tabata;\r\n","import React from \"react\";\r\n\r\nimport Stopwatch from \"../components/timers/Stopwatch\";\r\nimport Countdown from \"../components/timers/Countdown\";\r\nimport XY from \"../components/timers/XY\";\r\nimport Tabata from \"../components/timers/Tabata\";\r\n\r\nfunction App() {\r\n\r\n  const timers = [\r\n    { title: \"Stopwatch\", C: <Stopwatch title={\"Stopwatch\"} /> },\r\n    { title: \"Countdown\", C: <Countdown title={\"Countdown\"} /> },\r\n    { title: \"XY\", C: <XY title={\"XY\"} /> },\r\n    { title: \"Tabata\", C: <Tabata title={\"Tabata\"} /> },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"grid typescale-md-major-third grid-col-span-12 children-slide-down\">\r\n      {timers.map((timer, index) => (\r\n        <div className=\"col-lg-span-6 \" key={index}>\r\n          <div className=\"m-t-2 m-x-0 p-0\">\r\n            {timer.C}\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport DocumentationView from \"./views/DocumentationView\";\r\nimport TimersView from \"./views/TimersView\";\r\n\r\n// Source: https://github.com/rokmesojedec/roKit\r\n//This Framework was developed by me\r\nimport \"./assets/rokit/dist/roKit.css\";\r\nimport \"./style/main.scss\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div\r\n      className=\"\r\n          p-0 \r\n          typescale-minor-second \r\n          typescale-sm-major-second \r\n          typescale-xl-minor-third \r\n          children-p-x-sm-10 \r\n          children-p-x-4\r\n          children-p-y-8\"\r\n    >\r\n      <Router>\r\n        <header className=\"p-y-0 slide-down-delay-5 fixed full-width z-3 top gradient-code-secondary shadow-8\">\r\n          <nav className=\"p-lg-0 nav-flex nav-main typescale-minor-second max-width-center-xxl m-y-1\">\r\n            <h1 className=\"nowrap text-light\" href=\"index.html\">\r\n              Rok's CSCI E39 Assignment #1\r\n            </h1>\r\n            <ul className=\"hover-light children-p-2 text-light\">\r\n              <li>\r\n                <Link to=\"/\">Timers</Link>\r\n              </li>\r\n              <li>\r\n                <Link to=\"/docs\">Documentation</Link>\r\n              </li>\r\n            </ul>\r\n          </nav>\r\n        </header>\r\n\r\n        <section className=\"max-width-center-xxl p-b-0 m-b-0\">\r\n          <Switch>\r\n            <Route path=\"/docs\">\r\n              <DocumentationView />\r\n            </Route>\r\n            <Route path=\"/\">\r\n              <TimersView />\r\n            </Route>\r\n          </Switch>\r\n        </section>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}