{"version":3,"sources":["components/documentation/DocumentComponent.js","components/generic/Button/Button.js","components/generic/Input/Input.js","components/generic/TimeComponent/TimeComponent.js","classes/Timer.js","components/generic/DisplayTime/DisplayTime.js","components/generic/MatIcon.js","components/generic/Panel/Panel.js","components/generic/ProgressBar/ProgressBar.js","components/generic/ProgressCircle/ProgressCircle.js","views/DocumentationView.js","components/timers/context/StopwatchContext.js","utils/helpers.js","components/timers/Stopwatch.js","components/timers/context/CountdownContext.js","components/timers/Countdown.js","components/timers/context/XYContext.js","components/timers/XY.js","classes/Interval.js","components/timers/context/TabataContext.js","components/timers/Tabata.js","views/context/TimersViewContext.js","views/TimersView.js","App.js","index.js"],"names":["DocumentComponent","className","this","props","title","component","propDocs","map","doc","index","prop","description","type","defaultValue","React","Component","Button","disabled","onButtonClick","children","tooltip","join","onClick","e","target","value","defaultProps","Input","min","max","onValueChange","onChange","TimeComponent","prependZero","label","showColon","readOnly","classList","filter","x","length","TimeDisplay","SECOND","MINUTE","HOUR","DAY","YEAR","MONTH","TIME_ENUM","MILLISECOND","Timer","years","months","days","hours","minutes","seconds","milliseconds","rounds","tickSize","countdownMode","intervalFunctions","onFinished","stopWatchMode","_years","_months","_days","_hours","_minutes","_seconds","_milliseconds","_rounds","_currentRound","_roundsCompleted","countdownInterval","_isRunning","_isDone","forEach","Object","defineProperty","get","set","parseInt","initializeTime","resetToCurrentTime","millisecondsTotal","_currentTime","_totalTime","_roundTime","isTimerComplete","setInterval","tick","func","clear","triggerOnFinished","clearInterval","intervalFunction","push","isNaN","Math","floor","DisplayTime","useState","setHours","setMinutes","setSeconds","setMilliseconds","useEffect","timer","timerTick","currentHours","currentMinutes","currentSeconds","currentMilliseconds","pushIntervalFunction","triggerOnFinishedOnUnmount","clean","showComponents","components","name","update","i","MatIcon","Panel","ProgressBar","progress","position","background","ProgressCircle","size","thickness","Container","styled","div","Documentation","document","body","add","remove","unpack","propsArray","StopwatchContext","createContext","StopwatchProvider","editMode","setEditMode","setProgress","paused","setPaused","isDone","setDone","percentComplete","ReactTooltip","rebuild","start","pause","reset","fastForward","finishRound","Provider","toggleEditMode","runAgain","PlayPauseButton","ButtonsPanel","toggleEdit","CongratsPanel","show","startFunc","Stopwatch","useContext","StopwatchTimer","CountdownContext","CountdownProvider","Countdown","CountdownTimer","XYContext","XYProvider","roundProgress","setRoundProgress","round","setRound","setTimerState","roundPercentComplete","currentRound","updateRound","XY","XYTimer","Interval","timers","completedRounds","_completedRounds","_currentTimerIndex","intializeTimers","isLastTimer","roundTime","currentRoundTime","currentTime","totalTime","reduce","prev","curr","currentTimer","TabataContext","IntervalTabata","timerA","timerB","TabataProvider","secondsTimerA","setSecondsTimerA","secondsTimerB","setSecondsTimerB","progressTimerA","setProgressTimerA","progressTimerB","setProgressTimerB","progressRound","currentProgress","updateInterval","roundPercentage","finishCurrent","Tabata","TabataTimer","TimersViewContext","TimersViewProvider","key","initialValue","item","window","localStorage","getItem","JSON","parse","error","console","log","storedValue","setStoredValue","setItem","stringify","usePersistedState","timerIndex","setTimerIndex","C","App","AppProvider","href","to","path","DocumentationView","ReactDOM","render","StrictMode","place","effect","delayShow","getElementById"],"mappings":"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","file":"static/js/main.dd3b41ae.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./DocumentComponent.scss\";\n\nclass DocumentComponent extends React.Component {\n  render() {\n    return (\n      <div className=\" table-wrapper shadow-6 rounded m-b-4 \">\n        <h4 className=\"text-center\">{this.props.title}</h4>\n        <div className=\"\">\n          <div className=\"component-container m-r-2\">{this.props.component}</div>\n          <table className=\"sass-table\">\n            <thead>\n              <tr>\n                <th>Prop</th>\n                <th>Description</th>\n                <th>Type</th>\n                <th>Default value</th>\n              </tr>\n            </thead>\n            <tbody>\n              {this.props.propDocs.map((doc, index) => {\n                return (\n                  <tr key={index}>\n                    <td>{doc.prop}</td>\n                    <td>{doc.description}</td>\n                    <td>{doc.type}</td>\n                    <td className=\"code-font\">\n                      {doc.defaultValue}\n                    </td>\n                  </tr>\n                );\n              })}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default DocumentComponent;\n","import './Button.scss';\nimport PropTypes from 'prop-types';\n\nconst Button = (props) => {\n  const { disabled, onButtonClick, children, tooltip, className } = props;\n  return <button\n    data-tip={tooltip}\n    className={['app-button round-button', className].join(\" \")}\n    disabled={disabled}\n    onClick={e => onButtonClick(e.target.value)}>\n    {children}\n  </button>;\n}\n\nexport default Button;\n\nButton.propTypes = {\n  disabled: PropTypes.bool,\n  className: PropTypes.string,\n  tooltip: PropTypes.string,\n  onClick: PropTypes.func\n}\n\nButton.defaultProps = {\n  children: \"Button\",\n  disabled: false,\n  className: \"\",\n  tooltip: null,\n  onButtonClick: () => { }\n}","import PropTypes from 'prop-types';\nimport './Input.scss';\n\nconst Input = (props) => {\n\n\n  const { type, value, disabled, className, min, max, onValueChange, title } = props;\n  return <input className={[\"timer-input timer-font\", className].join(\" \")}\n    type={type}\n    value={value}\n    min={min}\n    max={max}\n    disabled={disabled}\n    title={title}\n    onChange={e => onValueChange(e.target.value)}></input>;\n}\n\nInput.propTypes = {\n  type: PropTypes.string,\n  value: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number\n  ]).isRequired,\n  disabled: PropTypes.bool,\n  min: PropTypes.number,\n  max: PropTypes.number,\n  onValueChange: PropTypes.func\n}\n\nInput.defaultProps = {\n  type: \"number\",\n  disabled: false,\n  min: 0,\n  onValueChange: () => { }\n}\n\nexport default Input;","import { Component } from 'react';\nimport Input from './../Input/Input.js';\nimport PropTypes from 'prop-types';\n\nimport './TimeComponent.scss';\n\nclass TimeComponent extends Component {\n    render() {\n        \n        const { prependZero, value, label, className, \n                showColon, readOnly, onValueChange } = this.props;\n        \n        // Create CSS class string from array\n        const classList = ['time-component', \n                            className, \n                            showColon ? \"colon\" : \"no-colon\", \n                            readOnly ? \"readonly-mode\" : \"input-mode\"]\n                            .filter(x => typeof x === 'string' && x.length > 0)\n                            .join(\" \");\n\n        let TimeDisplay = null;\n        if (readOnly)\n            /* Static - non-editable part of component. Only shows when readOnly is set to true*/\n            TimeDisplay = <div>\n            {prependZero && value < 10 && <span className='timer-font zero'>0</span>}\n            <span className={'timer-font' + (value === 0 ? ' zero' : '')}>{value}</span></div>;\n        else \n            /* Editable part of component, shown when readOnly is false */\n            TimeDisplay = <div><Input value={value} title={label} onValueChange={e => onValueChange(e) }></Input></div>;\n\n        return <div className={classList}>\n            { TimeDisplay }\n            {label && <div className=\"label\">{label}</div> }\n        </div>;\n    }\n}\n\nTimeComponent.propTypes = {\n    value: PropTypes.number,\n    prependZero: PropTypes.bool,\n    label: PropTypes.string,\n    className: PropTypes.string,\n    showColon: PropTypes.bool,\n    readOnly: PropTypes.bool,\n    onValueChange: PropTypes.func\n}\n\nTimeComponent.defaultProps = {\n    value: 0,\n    prependZero: false,\n    label: null,\n    className: null,\n    showColon: false,\n    readOnly: true,\n    onValueChange: ()=>{}\n}\n\nexport default TimeComponent;","const MILLISECOND = 1;\nconst SECOND = 1000 * MILLISECOND;\nconst MINUTE = SECOND * 60;\nconst HOUR = MINUTE * 60;\nconst DAY = 24 * HOUR;\nconst YEAR = 365 * DAY;\nconst MONTH = YEAR / 12;\n\n// Time Enums in milliseconds\nexport const TIME_ENUM = {\n    MILLISECOND: MILLISECOND,\n    SECOND: SECOND,\n    MINUTE: MINUTE,\n    HOUR: HOUR,\n    DAY: DAY,\n    YEAR: YEAR,\n    MONTH: MONTH\n}\n\n// Creates Timer Object\nexport class Timer {\n    constructor({\n        years = 0,\n        months = 0,\n        days = 0,\n        hours = 0,\n        minutes = 0,\n        seconds = 0,\n        milliseconds = 0,\n        rounds = 1,\n        tickSize = MILLISECOND * 52, // sets the amount increased/decreased on each tick\n        countdownMode = true, // when set to true, we count down to passed time values\n        // and when countdownMode is true, we count up to the passed value\n        intervalFunctions = [], // functions which are executed during each tick of the timer,\n        onFinished = null,\n        stopWatchMode = false\n    } = {}) {\n        // Convert args to milliseconds\n\n        this._years = years;\n        this._months = months;\n        this._days = days;\n        this._hours = hours;\n        this._minutes = minutes;\n        this._seconds = seconds;\n        this._milliseconds = milliseconds;\n        this._rounds = this._currentRound = rounds;\n        this._roundsCompleted = 0;\n        this.tickSize = tickSize;\n        this.countdownInterval = null;\n        this.intervalFunctions = [...intervalFunctions];\n        this.countdownMode = countdownMode;\n        this.onFinished = onFinished;\n        this.stopWatchMode = stopWatchMode;\n        this._isRunning = false;\n        this._isDone = false;\n\n        // defines getters and setters for time components\n        [\"years\", \"months\", \"days\", \"hours\", \"minutes\", \"seconds\", \"milliseconds\"].forEach(\n            prop => {\n                Object.defineProperty(this, prop, {\n                    get: function () {\n                        return this[`_${prop}`];\n                    },\n                    set: function (value) {\n                        this[`_${prop}`] = parseInt(value);\n                        this.initializeTime(this.stopWatchMode || this.countdownMode);\n                    }\n                });\n            }\n        )\n        this.initializeTime(this.countdownMode);\n    }\n\n    initializeTime(resetToCurrentTime = true) {\n        // Converts all time components to milliseconds;\n        let millisecondsTotal = 0\n            + this._milliseconds\n            + this._seconds * SECOND\n            + this._minutes * MINUTE\n            + this._hours * HOUR\n            + this._days * DAY\n            + this._months * MONTH\n            + this._years * YEAR;\n\n        if (this.countdownMode || resetToCurrentTime) {\n            // Counting down from Start Time to 0\n            this._currentTime = millisecondsTotal;\n        } else {\n            // Counting up form 0 to End Time\n            this._currentTime = 0;\n        }\n\n        this._currentRound = this.rounds;\n        this._roundsCompleted = 0;\n        this._totalTime = millisecondsTotal * this.rounds;\n        this._roundTime = millisecondsTotal;\n    }\n\n    tick() {\n        // increases or decreases time on each tick\n        if (this.countdownMode) {\n            // COUNTING DOWN\n            this._currentTime -= this.tickSize;\n            if (this._currentTime <= 0) {\n                if (this._currentRound > 0) this._currentRound--;\n                if (this._currentRound > 0) {\n                    this._currentTime = this._roundTime - this._currentTime;\n                } else {\n                    this._roundsCompleted++;\n                    this._currentTime = 0;\n                }\n            }\n        }\n        else {\n            // CONTING UP\n            this._currentTime += this.tickSize;\n            if (this._currentTime >= this._roundTime) {\n                if (this._currentRound > 0) this._currentRound--;\n                if (this._currentRound > 0) {\n                    this._currentTime = this._currentTime - this._roundTime;\n                } else {\n                    this._roundsCompleted++;\n                    this._currentTime = this._roundTime;\n                }\n            }\n        }\n    }\n\n    start(initializeTime = true) {\n        if (this.countdownInterval === null) {\n            this._isDone = false;\n            if (initializeTime || this.isTimerComplete) this.initializeTime(this.countdownMode);\n            this._isRunning = true;\n            this.countdownInterval = setInterval(() => {\n                this.tick();\n                this.intervalFunctions.forEach(func => { func(this); });\n                if (this.isTimerComplete) this.clear();\n            }, this.tickSize);\n        }\n    }\n\n    clean() {\n        this.intervalFunctions.length = 0;\n    }\n\n    clear(triggerOnFinished = true) {\n        clearInterval(this.countdownInterval);\n        this._isRunning = false;\n        this.countdownInterval = null;\n        if (triggerOnFinished && (this.onFinished && typeof this.onFinished === \"function\")) {\n            this.onFinished();\n        }\n    }\n\n    reset() {\n        this.initializeTime(this.countdownMode);\n        this.intervalFunctions.forEach(func => { func(this); });\n    }\n\n    finishRound() {\n        if (!this.isTimerComplete) {\n            clearInterval(this.countdownInterval);\n            this.countdownInterval = null;\n            if (this.countdownMode) {\n                // COUNTING DOWN\n                this._currentTime = 0;\n            }\n            else {\n                // COUNTING UP\n                this._currentTime = this._roundTime;\n            }\n\n            this.intervalFunctions.forEach(func => { func(this); });\n            if (this.onFinished && typeof this.onFinished === \"function\") {\n                this.onFinished();\n            }\n        }\n    }\n\n    pushIntervalFunction(intervalFunction) {\n        this.intervalFunctions.push(intervalFunction);\n    }\n\n    valueOf() {\n        return this._currentTime;\n    }\n\n    get rounds() {\n        return this._rounds;\n    }\n\n    set rounds(value) {\n        if(isNaN(value) || value < 1) value = 1;\n        this._rounds = parseInt(value);\n        this.initializeTime();\n    }\n\n    get isRunning() {\n        return this._isRunning;\n    }\n\n    get roundPercentComplete() {\n        return Math.floor((10000 * (this._currentTime / this._roundTime)));\n    }\n\n    get percentComplete() {\n        let rounds;\n        if (this.countdownMode) {\n            if (this._currentRound - 1 < 0) return 0;\n            rounds = this._currentRound - 1;\n        }\n        else rounds = this._roundsCompleted;\n\n        return Math.floor((10000 *\n            (rounds * this._roundTime + this._currentTime) / this._totalTime));\n    }\n\n    get minutePercentComplete() {\n        return Math.floor((10000 *\n            (this._currentTime % MINUTE) / MINUTE));\n    }\n\n    get currentRound() {\n        return this._currentRound;\n    }\n\n    get currentYears() {\n        return Math.floor(this._currentTime / YEAR);\n    }\n\n    get currentMonths() {\n        return Math.floor((this._currentTime % YEAR) / MONTH);\n    }\n\n    get currentDays() {\n        return Math.floor((this._currentTime % MONTH) / DAY);\n    }\n\n    get currentHours() {\n        return Math.floor((this._currentTime % DAY) / HOUR);\n    }\n\n    get currentMinutes() {\n        return Math.floor((this._currentTime % HOUR) / MINUTE);\n    }\n\n    get currentSeconds() {\n        return Math.floor((this._currentTime % MINUTE) / SECOND);\n    }\n\n    get currentMilliseconds() {\n        return Math.floor((this._currentTime % SECOND) / MILLISECOND);\n    }\n\n    get isRoundComplete() {\n        if (this.countdownMode)\n            return this._currentTime === 0;\n        return this._currentTime === this._roundTime;\n    }\n\n    get totalTime() {\n        return this._totalTime;\n    }\n\n    get isTimerComplete() {\n        // stopwatch has no end time\n        if (this.stopWatchMode) return false;\n        // tells weather times is finished\n        if (this.countdownMode)\n            return this._currentRound === 0 && this._currentTime === 0;\n        return this._currentRound === 0 && this._currentTime === this._roundTime;\n    }\n\n    get isTimerNotComplete(){\n        return !this.isTimerComplete;\n    }\n\n    destroy() {\n        clearInterval(this.countdownInterval);\n        this.intervalFunctions = null;\n    }\n\n    static get TIME_ENUM() {\n        return TIME_ENUM;\n    }\n}","import { useState, useEffect } from 'react';\nimport './DisplayTime.scss';\nimport TimeComponent from '../TimeComponent/TimeComponent';\nimport PropTypes from 'prop-types';\nimport { Timer } from '../../../classes/Timer';\n\nconst DisplayTime = function (props) {\n\n  const [hours, setHours] = useState(0);\n  const [minutes, setMinutes] = useState(0);\n  const [seconds, setSeconds] = useState(0);\n  const [milliseconds, setMilliseconds] = useState(0);\n\n  useEffect(() => {\n    if (props.timer) {\n      const timerTick = (timer) => {\n        setHours(timer.currentHours);\n        setMinutes(timer.currentMinutes);\n        setSeconds(timer.currentSeconds);\n        setMilliseconds(timer.currentMilliseconds);\n      };\n      props.timer.pushIntervalFunction(timerTick);\n      timerTick(props.timer);\n    }\n    return () => {\n      if (props.triggerOnFinishedOnUnmount) {\n        props.timer.clear();\n        props.timer.clean();\n      }\n    };\n  }, [props.timer, props.triggerOnFinishedOnUnmount]); \n\n  const { className, readOnly, showComponents } = props;\n\n  // Timer class also support Years, Months, Days but these time units aren't appropriate for timer use\n  const components = []\n\n  if (showComponents.hours) components.push({ label: \"h\", prependZero: true, name: \"hours\", update: setHours, value: hours });\n  if (showComponents.minutes) components.push({ label: \"m\", prependZero: true, name: \"minutes\", update: setMinutes, value: minutes });\n  if (showComponents.seconds) components.push({ label: \"s\", prependZero: true, name: \"seconds\", update: setSeconds, value: seconds });\n  if (showComponents.milliseconds) components.push({ label: \"ms\", prependZero: false, name: \"milliseconds\", update: setMilliseconds, value: milliseconds });\n\n  return <div className={['time-components', className].join(\" \")}>\n    {components.map((component, i) =>\n      <TimeComponent value={component.value}\n        key={component.label}\n        label={component.label}\n        prependZero={component.prependZero}\n        readOnly={readOnly}\n        showColon={i !== 0}\n        onValueChange={e => {\n          props.timer[component.name] = e;\n          component.update(e);\n        }}></TimeComponent>)}\n  </div>;\n}\n\nDisplayTime.propTypes = {\n  timer: PropTypes.instanceOf(Timer),\n  className: PropTypes.string,\n  readOnly: PropTypes.bool,\n  showComponents: PropTypes.object,\n  triggerOnFinishedOnUnmount: PropTypes.bool\n}\n\nDisplayTime.defaultProps = {\n  timer: new Timer(0),\n  className: null,\n  readOnly: true,\n  showComponents: {\n    hours: true,\n    minutes: true,\n    seconds: true,\n    milliseconds: true\n  },\n  triggerOnFinishedOnUnmount: true\n}\n\nexport default DisplayTime;","const MatIcon = (props) => {\n  const { children } = props;\n  return  <span className=\"material-icons-outlined size-32\">{children}</span>;\n}\nexport default MatIcon;\n\nMatIcon.propTypes = {} \nMatIcon.defaultProps = {}","import { Component } from 'react';\nimport './Panel.scss';\n\nclass Panel extends Component {\n  render() {\n    const { className } = this.props;\n    return <div className={['relative rounded p-4', className].join(\" \")}>{this.props.children}</div>;\n  }\n}\n\nexport default Panel;","import { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './ProgressBar.scss';\n\nclass ProgressBar extends Component {\n    render() {\n        const { progress, position, className, background } = this.props;\n        return <div className={['ProgressBar', className, position].join(\" \")}>\n            <div className={['progress', \"progress-\" + progress, background].join(\" \")}></div>\n        </div>;\n    }\n}\n\nProgressBar.propTypes = {\n    progress: PropTypes.number,\n    position: PropTypes.oneOf([\"bottom\", \"top\", \"left\", \"right\", null]),\n    className: PropTypes.string,\n    background: PropTypes.string\n}\n\nProgressBar.defaultProps = {\n    progress: 0,\n    position: null,\n    className: null,\n    background: \"gradient-primary-light-danger\"\n}\n\nexport default ProgressBar;","import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './ProgressCircle.scss';\n\nclass ProgressCircle extends Component {\n    render() {\n        const { progress, className,  children, size, thickness } = this.props;\n        return <div className={[`size-${size}`, `thickness-${thickness}`, 'ProgressCircle', className].join(\" \")}>\n            <div className={['overlay', \"progress-\" + progress].join(\" \")}>\n                <div className={['InnerCircle'].join(\" \")}>\n                    {children}\n                </div>\n            </div>\n        </div>;\n    }\n}\n\nProgressCircle.propTypes = {\n    progress: PropTypes.number,\n    className: PropTypes.string,\n    thickness: PropTypes.oneOf([\"xs\", \"sm\", \"md\", \"lg\", \"xl\", \"xxl\"]),\n    size: PropTypes.oneOf([\"xs\", \"sm\", \"md\", \"lg\", \"xl\", \"xxl\"])\n}\n\nProgressCircle.defaultProps = {\n    progress: 0,\n    className: null,\n    thickness: \"sm\",\n    size: \"lg\"\n}\n\nexport default ProgressCircle;","import React from \"react\";\nimport styled from \"styled-components\";\nimport DocumentComponent from \"../components/documentation/DocumentComponent\";\nimport Button from \"../components/generic/Button/Button\";\nimport DisplayTime from \"../components/generic/DisplayTime/DisplayTime\";\nimport Input from \"../components/generic/Input/Input\";\nimport MatIcon from \"../components/generic/MatIcon\";\nimport Panel from \"../components/generic/Panel/Panel\";\nimport ProgressBar from \"../components/generic/ProgressBar/ProgressBar\";\nimport ProgressCircle from \"../components/generic/ProgressCircle/ProgressCircle\";\nimport TimeComponent from \"../components/generic/TimeComponent/TimeComponent\";\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n  width: 100%;\n`;\n\nclass Documentation extends React.Component {\n  componentDidMount() {\n    document.body.classList.add(\"white-bg\");\n  }\n  componentWillUnmount() {\n    document.body.classList.remove(\"white-bg\");\n  }\n  render() {\n    // Unpacks array into props used by propDocs prop of DocumentComponent\n    // Order of props is important\n    const unpack = (propsArray) => {\n      const [prop, description, type, defaultValue] = propsArray;\n      return { prop, description, type, defaultValue };\n    }\n    return (\n      <Container>\n        <div>\n          <h1 className=\"text-center\">Documentation</h1>\n          <DocumentComponent\n            title=\"<Button></Button>\"\n            component={<Button className=\"p-x-2 p-y-1\" />}\n            propDocs={[\n              unpack([\"disabled\", \"disables / enables button\", \"bool\", \"false\"]),\n              unpack([\"className\", \"sets HTML class name\", \"string\", \"''\"]),\n              unpack([\"tooltip\", \"adds on hover tooltip\", \"string\", \"null\"]),\n              unpack([\"onClick\", \"on click method\", \"func\", \"() => { }\"]),\n            ]}\n          />\n          <DocumentComponent\n            title=\"<DisplayTime />\"\n            component={<DisplayTime />}\n            propDocs={[\n              unpack([\"timer\", \"Timer object\", \"Timer\", \"new Timer(0)\"]),\n              unpack([\"className\", \"sets HTML class name\", \"string\", \"null\"]),\n              unpack([\"readOnly\", \"enable user editing of values when set to true\", \"bool\", \"true\"]),\n              unpack([\"triggerOnFinishedOnUnmount\", \"disabled or enabled triggering timer object onFinished event on component unmount\", \"bool\", \"true\"]),\n              unpack([\"showComponents\", \"disable / enable individual time-components\", \"object\", \"{ hours: true, minutes: true, seconds: true, milliseconds: true }\"])\n            ]}\n          />\n          <DocumentComponent\n            title=\"<Input />\"\n            component={<Input value={5} />}\n            propDocs={[\n              unpack([\"type\", \"sets HTML input type\", \"string\", \"number\"]),\n              unpack([\"value\", \"sets HTML value attribute\", \"string | number\", \"N/A\"]),\n              unpack([\"disabled\", \"disables / enables input\", \"bool\", \"false\"]),\n              unpack([\"min\", \"sets HTML min attribute\", \"number\", \"0\"]),\n              unpack([\"max\", \"sets HTML max attribute\", \"number\", \"N/A\"]),\n              unpack([\"onValueChange\", \"onChange handler function. Fires when input is changed\", \"func\", \"()=>{ }\"])\n            ]}\n          />\n          <DocumentComponent\n            title=\"<Panel></Panel>\"\n            component={<Panel className=\"shadow-6 round\">Hello Panel!</Panel>}\n            propDocs={[\n              unpack([\"className\", \"sets HTML class name\", \"string\", \"null\"])\n            ]}\n          />\n          <DocumentComponent\n            title=\"<ProgressCircle></ProgressCircle>\"\n            component={<ProgressCircle size=\"sm\" progress={4534} className=\"text-center\">Hello Circle!</ProgressCircle>}\n            propDocs={[\n              unpack([\"progress\", \"sets progress amount\", \"number between 0 and 10000 where 10000 is 100%\", \"0\"]),\n              unpack([\"className\", \"sets HTML class name\", \"string\", \"null\"]),\n              unpack([\"thickness\", \"sets thickness of loader line\", 'string one of \"xs\", \"sm\", \"md\", \"lg\", \"xl\", \"xxl', \"sm\"]),\n              unpack([\"thickness\", \"sets size of circle\", 'string one of \"xs\", \"sm\", \"md\", \"lg\", \"xl\", \"xxl', \"lg\"])\n            ]}\n          />\n          <DocumentComponent\n            title=\"<ProgressBar />\"\n            component={<ProgressBar className=\"width-100px shadow-6\" progress={54} />}\n            propDocs={[\n              unpack([\"className\", \"sets HTML class name\", \"string\", \"null\"]),\n              unpack([\"position\", \"sets absolute position to one side of parent container\", \"string one of 'bottom', 'top', 'left', 'right', null\", \"null\"]),\n              unpack([\"progress\", \"sets progress amount\", \"number\", \"0\"]),\n              unpack([\"background\", \"sets CSS class for background of the filler bar\", \"string\", \"gradient-primary-light-danger\"])\n            ]}\n          />\n          <DocumentComponent\n            title=\"<TimeComponent />\"\n            component={<TimeComponent className=\"shadow-6 text-center\" label=\"label\" prependZero={true} value={1} />}\n            propDocs={[\n              unpack([\"value\", \"sets value shown in time component\", \"number\", \"0\"]),\n              unpack([\"prependZero\", \"prepends zero to value if value lower than 10 when in readonly mode\", \"bool\", \"false\"]),\n              unpack([\"showColon\", \"adds ':' to the left of component\", \"bool\", \"false\"]),\n              unpack([\"label\", \"adds label under the value\", \"string\", \"null\"]),\n              unpack([\"readOnly\", \"when set to false, value can be changed by user\", \"bool\", \"true\"]),\n              unpack([\"onValueChange\", \"function which is triggered when input value changes\", \"func\", \"()=>{}\"])\n            ]}\n          />\n          <DocumentComponent\n            title=\"<MatIcon></MatIcon>\"\n            component={<MatIcon>computer</MatIcon>}\n            propDocs={[\n              unpack([\"children\", \"add display material icon string into this component to display it\", \"string\", \"null\"]),\n            ]}\n          />\n        </div>\n      </Container>\n    );\n  }\n}\n\nexport default Documentation;\n","import React, { useEffect, useState } from 'react';\nimport { Timer } from '../../../classes/Timer';\nimport ReactTooltip from 'react-tooltip';\n\nexport const StopwatchContext = React.createContext({});\n\nconst timer = new Timer({\n    countdownMode: false,\n    seconds: 30\n});\n\nconst StopwatchProvider = ({ children }) => {\n\n    const [editMode, setEditMode] = useState(false);\n    const [progress, setProgress] = useState(0);\n    const [paused, setPaused] = useState(false);\n    const [isDone, setDone] = useState(false);\n\n    useEffect(() => {\n        // Add state tick update and complet events to timer object\n        timer.pushIntervalFunction((timer) => { setProgress(timer.percentComplete); })\n        timer.onFinished = () => { setPaused(false); if(timer.isTimerComplete) setDone(true); };\n\n        setProgress(timer.percentComplete);\n\n        // Needed to keep tooltips after component mount/unmount\n        ReactTooltip.rebuild();\n\n        return () => {\n            // stop and remove intervals on unmount\n            timer.clear();\n            timer.clean();\n        }\n    }, []);\n\n    useEffect(()=>{\n        // Needed to keep tooltips after component mount/unmount\n        ReactTooltip.rebuild();\n    },[isDone])\n\n    const title = \"Stopwatch\";\n    const start = () => { timer.start(false); setPaused(true); setEditMode(false); setDone(false); }\n    const pause = () => { timer.clear(); setPaused(false); }\n    const reset = () => { timer.reset(); setProgress(timer.percentComplete); }\n    const toggleEditMode = () => { pause(); fastForward();  setDone(false); setEditMode(!editMode);  pause(); if(editMode) {reset();} }\n    const fastForward = () => { timer.finishRound(); setProgress(timer.percentComplete); start(); setPaused(false); setDone(true); }\n    const runAgain = () => { reset(); setDone(false); }\n\n    return <StopwatchContext.Provider\n        value={{\n            paused,\n            progress,\n            editMode,\n            toggleEditMode,\n            start,\n            pause,\n            reset,\n            fastForward,\n            runAgain,\n            timer,\n            title,\n            isDone\n        }}>\n        {children}\n    </StopwatchContext.Provider>\n}\n\nexport default StopwatchProvider;","// Add helpers here. This is usually code that is just JS and not React code. Example: write a function that\n// calculates number of minutes when passed in seconds. Things of this nature that you don't want to copy/paste\n// everywhere.\n\nimport MatIcon from \"./../components/generic/MatIcon\";\nimport Button from \"./../components/generic/Button/Button\";\nimport { useEffect, useRef, useState } from 'react';\n\nexport const PlayPauseButton = (paused, start, pause) => {\n    if (!paused) {\n        return <Button onButtonClick={start} tooltip=\"Start\">\n            <MatIcon>play_arrow</MatIcon>\n        </Button>;\n    }\n    return <Button onButtonClick={pause} tooltip=\"Stop\">\n        <MatIcon>pause</MatIcon>\n    </Button>\n}\n\nexport const ButtonsPanel = (paused, start, pause, reset, fastForward, toggleEdit, editMode) => {\n    return <div className=\"buttons-panel\">\n        { PlayPauseButton(paused, start, pause)}\n        <Button onButtonClick={reset} tooltip=\"Reset\" ><MatIcon>restart_alt</MatIcon></Button>\n        <Button onButtonClick={fastForward} tooltip=\"Finish\" >\n            <MatIcon>fast_forward</MatIcon>\n        </Button>\n        <Button onButtonClick={toggleEdit} tooltip={editMode ? \"Exit Edit\" : \"Edit\"}>\n            <MatIcon>{editMode ? \"edit_off\" : \"edit\"}</MatIcon>\n        </Button>\n    </div>\n}\n\nexport const CongratsPanel = (show, startFunc) => {\n    if (show)\n        return <div className=\"congrats\">\n            Well done! 💪\n            <Button onButtonClick={startFunc} className=\"m-l-2 p-1\">\n                <MatIcon>restart_alt</MatIcon> Run Again\n            </Button>\n        </div>\n    return;\n}\n\n// Copied from lecture\nexport const usePrevious = value => {\n    const ref = useRef(value);\n\n    useEffect(() => {\n        ref.current = value;\n    }, [value]);\n\n    return ref.current;\n};\n\n// Copied from lecture\nexport const usePersistedState = (key, initialValue) => {\n    const [storedValue, setStoredValue] = useState(() => {\n        try {\n            // Read initial value from local storage or fallback to the given initial value\n            const item = window.localStorage.getItem(key);\n            return item ? JSON.parse(item) : initialValue;\n        } catch (error) {\n            console.log(error);\n            return initialValue;\n        }\n    });\n\n    const setValue = value => {\n        try {\n            setStoredValue(value);\n            window.localStorage.setItem(key, JSON.stringify(value));\n        } catch (error) {\n            console.log(error);\n        }\n    };\n\n    return [storedValue, setValue];\n};","import { useContext } from \"react\";\nimport Panel from \"./../generic/Panel/Panel\";\nimport DisplayTime from \"./../generic/DisplayTime/DisplayTime\";\nimport ProgressCircle from \"./../generic/ProgressCircle/ProgressCircle\";\nimport StopwatchProvider, { StopwatchContext } from './context/StopwatchContext';\nimport { ButtonsPanel, CongratsPanel } from '../../utils/helpers';\n\nconst Stopwatch = () => {\n\n  const { paused, progress, start, toggleEditMode, editMode, fastForward, runAgain, \n    pause, reset, timer, isDone } = useContext(StopwatchContext);\n\n  return <Panel>\n    <ProgressCircle progress={progress} thickness=\"sm\" className=\"timer\">\n      <div>\n        <DisplayTime timer={timer} readOnly={!editMode} className=\"panel-morph p-2\"></DisplayTime>\n      </div>\n    </ProgressCircle>\n    {!isDone && ButtonsPanel(paused, start, pause, reset, fastForward, toggleEditMode, editMode) }\n    { CongratsPanel(isDone && !editMode, runAgain) } \n  </Panel>;\n}\nconst StopwatchTimer = () => {\n  return (<StopwatchProvider>\n    <Stopwatch />\n  </StopwatchProvider>)\n};\n\nexport default StopwatchTimer;\n","import React, { useEffect, useState } from 'react';\r\nimport { Timer } from '../../../classes/Timer';\r\nimport ReactTooltip from 'react-tooltip';\r\n\r\nexport const CountdownContext = React.createContext({});\r\n\r\nconst timer = new Timer({\r\n    minutes: 0,\r\n    seconds: 10,\r\n    tickSize: Timer.TIME_ENUM.MILLISECOND * 52,\r\n});\r\n\r\nconst CountdownProvider = ({ children }) => {\r\n\r\n    const [editMode, setEditMode] = useState(false);\r\n    const [paused, setPaused] = useState(false);\r\n    const [progress, setProgress] = useState(10000);\r\n    const [isDone, setDone] = useState(false);\r\n\r\n    useEffect(() => {\r\n        // Add state tick update and complet events to timer object\r\n        timer.pushIntervalFunction((timer) => { setProgress(timer.percentComplete); })\r\n        timer.onFinished = () => { setPaused(false); if (timer.isTimerComplete) setDone(true); };\r\n\r\n        setProgress(timer.percentComplete);\r\n\r\n        // Needed to keep tooltips after component mount/unmount\r\n        ReactTooltip.rebuild();\r\n\r\n        return () => {\r\n            // stop and remove intervals on unmount\r\n            timer.clear();\r\n            timer.clean();\r\n        }\r\n    }, []);\r\n\r\n    useEffect(()=>{\r\n        // Needed to keep tooltips after component mount/unmount\r\n        ReactTooltip.rebuild();\r\n    },[isDone])\r\n\r\n    const title = \"Countdown\";\r\n    const start = () => { setDone(false); timer.start(false); setPaused(true); setEditMode(false);  }\r\n    const pause = () => { timer.clear(); setPaused(false); }\r\n    const reset = () => { timer.reset(); setProgress(timer.percentComplete); }\r\n    const toggleEditMode = () => { pause(); reset(); setEditMode(!editMode); }\r\n    const fastForward = () => { timer.finishRound(); setProgress(timer.percentComplete); start(); setDone(true) }\r\n    const runAgain = () => { reset(); setDone(false); }\r\n\r\n    return <CountdownContext.Provider\r\n        value={{\r\n            paused,\r\n            progress,\r\n            editMode,\r\n            toggleEditMode,\r\n            start,\r\n            pause,\r\n            reset,\r\n            fastForward,\r\n            runAgain,\r\n            timer,\r\n            title,\r\n            setDone,\r\n            isDone\r\n        }}>\r\n        {children}\r\n    </CountdownContext.Provider>\r\n}\r\n\r\nexport default CountdownProvider;","import { useContext } from 'react';\nimport Panel from \"./../generic/Panel/Panel\";\nimport DisplayTime from \"./../generic/DisplayTime/DisplayTime\";\nimport ProgressCircle from \"./../generic/ProgressCircle/ProgressCircle\";\nimport CountdownProvider, { CountdownContext } from './context/CountdownContext';\nimport { CongratsPanel, ButtonsPanel } from '../../utils/helpers';\n\nconst Countdown = () => {\n\n  const { paused, progress, start, editMode, toggleEditMode, isDone, runAgain,\n    pause, reset, fastForward, timer } = useContext(CountdownContext);\n\n  return <Panel>\n    <ProgressCircle progress={progress} thickness=\"sm\" size=\"lg\" className=\"timer\" >\n      <div><DisplayTime timer={timer}\n        readOnly={!editMode} className=\"panel-morph p-2\"></DisplayTime></div>\n    </ProgressCircle>\n    {!isDone && ButtonsPanel(paused, start, pause, reset, fastForward, toggleEditMode, editMode)}\n    {CongratsPanel(isDone, runAgain)}\n  </Panel>;\n}\n\nconst CountdownTimer = () => {\n  return (<CountdownProvider>\n    <Countdown />\n  </CountdownProvider>)\n};\n\nexport default CountdownTimer;\n","import React, { useEffect, useState } from 'react';\nimport { Timer } from '../../../classes/Timer';\nimport ReactTooltip from 'react-tooltip';\n\nexport const XYContext = React.createContext({});\n\nconst timer = new Timer({\n    seconds: 20,\n});\n\nconst XYProvider = ({ children }) => {\n\n    const [editMode, setEditMode] = useState(false);\n    const [progress, setProgress] = useState(0);\n    const [roundProgress, setRoundProgress] = useState(0);\n    const [round, setRound] = useState(0);\n    const [paused, setPaused] = useState(false);\n    const [isDone, setDone] = useState(false);\n\n    useEffect(() => {\n        const setTimerState = (timer) => {\n            setProgress(timer.percentComplete);\n            setRoundProgress(timer.roundPercentComplete);\n            setRound(timer.currentRound);\n        };\n        timer.pushIntervalFunction(setTimerState);\n        timer.onFinished = () => { setPaused(false); if (timer.isTimerComplete) setDone(true); };\n        setTimerState(timer);\n\n        // Needed to keep tooltips after component mount/unmount\n        ReactTooltip.rebuild();\n\n        return () => {\n            // stop and remove intervals on unmount\n            timer.clear();\n            timer.clean();\n        }\n    }, []);\n\n\n    useEffect(()=>{\n        // Needed to keep tooltips after component mount/unmount\n        ReactTooltip.rebuild();\n    },[isDone])\n\n    const start = () => { timer.start(false); setPaused(true); setEditMode(false); setDone(false); }\n    const pause = () => { timer.clear(); setPaused(false); }\n    const reset = () => { timer.reset(); setProgress(timer.percentComplete); }\n    const toggleEditMode = () => { pause(); reset(); setEditMode(!editMode); }\n    const fastForward = () => { timer.finishRound(); setProgress(timer.percentComplete); timer.start(false); }\n    const updateRound = (value) => { timer.rounds = value; setRound(timer.currentRound); }\n    const runAgain = () => { reset(); setDone(false); }\n\n    const title = \"XY\";\n\n    return <XYContext.Provider\n        value={{\n            paused,\n            progress,\n            toggleEditMode,\n            editMode,\n            start,\n            pause,\n            reset,\n            fastForward,\n            timer,\n            title,\n            round,\n            updateRound,\n            runAgain,\n            roundProgress,\n            isDone\n        }}>\n        {children}\n    </XYContext.Provider>\n}\n\nexport default XYProvider;","import { useContext } from \"react\";\nimport Panel from \"./../generic/Panel/Panel\";\nimport DisplayTime from \"./../generic/DisplayTime/DisplayTime\";\nimport ProgressCircle from \"./../generic/ProgressCircle/ProgressCircle\";\nimport TimeComponent from \"../generic/TimeComponent/TimeComponent\";\nimport { ButtonsPanel, CongratsPanel } from '../../utils/helpers';\nimport XYProvider, { XYContext } from './context/XYContext';\n\nconst XY = () => {\n\n  const { paused, progress, start, pause, editMode, toggleEditMode, updateRound, runAgain, \n    reset, fastForward, timer, round, roundProgress, isDone } = useContext(XYContext);\n\n  return <Panel>\n    <ProgressCircle progress={progress} className=\"timer\" size=\"xl\" thickness=\"sm\">\n      <div>\n        <ProgressCircle progress={roundProgress} className=\"tiny-timer\" size=\"sm\" thickness=\"sm\">\n          <TimeComponent value={round} label=\"round\" readOnly={!editMode}\n            onValueChange={(e) => { updateRound(e); }}\n          ></TimeComponent>\n        </ProgressCircle>\n        <DisplayTime className=\"m-t-1\" timer={timer} readOnly={!editMode}></DisplayTime>\n\n      </div>\n    </ProgressCircle>\n    {!isDone && ButtonsPanel(paused, start, pause, reset, fastForward, toggleEditMode, editMode)}\n\n    { CongratsPanel(isDone, runAgain) }\n  </Panel>;\n}\nconst XYTimer = () => {\n  return (<XYProvider>\n    <XY />\n  </XYProvider>)\n};\n\nexport default XYTimer;\n","export class Interval {\n    constructor({\n        timers = [],\n        rounds = 1,\n        completedRounds = 0\n    } = {}) {\n        this.timers = timers;\n        this._rounds = rounds;\n        this._totalTime = null;\n        this._roundTime = null;\n        this._completedRounds = completedRounds;\n        this._currentTimerIndex = 0;\n        this.intializeTimers();\n    }\n\n    intializeTimers() {\n        for (let i = 0; i < this.timers.length; i++) {\n            let timer = this.timers[i];\n            let isLastTimer = this.timers.length - 1 === i;\n            timer.onFinished = () => {\n                this._currentTimerIndex = (isLastTimer) ? 0 : i + 1;\n                if (isLastTimer) {\n                    this._completedRounds++;\n                    if (this._completedRounds < this.rounds)\n                        this.timers.forEach(timer => timer.reset());\n                }\n                if (this._completedRounds < this.rounds)\n                    this.timers[this._currentTimerIndex].start();\n                else if (this.onFinished && typeof this.onFinished === \"function\") {\n                    this.onFinished();\n                }\n            }\n        }\n    }\n\n    get totalTime() {\n        if (!this._totalTime) this._totalTime = this.roundTime * this.rounds;\n        return this._totalTime;\n    }\n\n    get currentTime() {\n        return (this.currentRound - 1) * this.roundTime + this.currentRoundTime;\n    }\n\n    get percentComplete() {\n        return Math.floor((10000 * this.currentTime / this.totalTime));\n    }\n\n    get roundTime() {\n        if (!this._roundTime) {\n            this._roundTime = this.timers.reduce((prev, curr) => {\n                return prev + curr.totalTime;\n            }, 0);\n        }\n        return this._roundTime;\n    }\n\n    get currentRoundTime() {\n        return this.timers.reduce((prev, curr) => {\n            return prev + curr;\n        }, 0)\n    }\n\n    get roundPercentage() {\n        return Math.floor((10000 *\n            this.currentRoundTime / this.roundTime));\n    }\n\n    get rounds() { return this._rounds; }\n    set rounds(value) { if(isNaN(value) || value < 1) value = 1; this._rounds = value; this._totalTime = null; this.reset() }\n\n    get currentTimer() {\n        const { _currentTimerIndex: index, timers } = this;\n        if (timers.length > 0 && index < timers.length) return timers[index];\n        return null;\n    }\n\n    get currentRound() {\n        return this.rounds - this._completedRounds;\n    }\n\n    start(initializeTime = true) {\n        if (this.currentRound === 0) {\n            this._completedRounds = 0;\n            this.timers.forEach(timer => timer.reset());\n        }\n        if (this.currentTimer) this.currentTimer.start(initializeTime);\n    }\n\n    clear(triggerOnFinished = true) {\n        this.timers.forEach(timer => timer.clear(triggerOnFinished));\n    }\n\n    reset() {\n        this.timers.forEach(timer => {\n            timer.clear(false);\n            timer.reset();\n        })\n        this._totalTime = null;\n        this._roundTime = null;\n        this._completedRounds = 0;\n        this._currentTimerIndex = 0;\n    }\n\n    clean() {\n        this.timers.forEach(timer => {\n            timer.clean();\n        });\n    }\n\n    finishCurrent() {\n        if (this.currentRound === 0) this.reset();\n        else if (this.currentTimer) this.currentTimer.finishRound();\n    }\n}","import React, { useEffect, useState } from 'react';\nimport { Timer } from '../../../classes/Timer';\nimport { Interval } from '../../../classes/Interval';\nimport ReactTooltip from 'react-tooltip';\n\nexport const TabataContext = React.createContext({});\n\nconst IntervalTabata = new Interval({\n    timers: [\n        new Timer({ seconds: 5 }),\n        new Timer({ seconds: 5 })],\n    rounds: 3\n});\n\nconst [timerA, timerB] = IntervalTabata.timers;\n\nconst TabataProvider = ({ children }) => {\n\n    const [secondsTimerA, setSecondsTimerA] = useState(0);\n    const [secondsTimerB, setSecondsTimerB] = useState(0);\n    const [progressTimerA, setProgressTimerA] = useState(0);\n    const [progressTimerB, setProgressTimerB] = useState(0);\n    const [progressRound, setRoundProgress] = useState(0);\n    const [currentRound, setRound] = useState(0);\n    const [currentProgress, setProgress] = useState(0);\n    const [paused, setPaused] = useState(false);\n    const [editMode, setEditMode] = useState(false);\n    const [isDone, setDone] = useState(false);\n\n    const updateInterval = () => {\n        setRoundProgress(IntervalTabata.roundPercentage);\n        setRound(IntervalTabata.currentRound);\n        setProgress(IntervalTabata.percentComplete);\n    }\n\n    useEffect(() => {\n        // push interval functions for workout timer\n        timerA.pushIntervalFunction((timer) => {\n            setProgressTimerA(timer.percentComplete);\n            setSecondsTimerA(timer.currentSeconds);\n            updateInterval();\n        })\n\n        // push interval functions for rest timer\n        timerB.pushIntervalFunction((timer) => {\n            setProgressTimerB(timer.percentComplete);\n            setSecondsTimerB(timer.currentSeconds);\n            updateInterval();\n        });\n\n        // set Pause state when interval object is done\n        IntervalTabata.onFinished = () => { \n            setPaused(false); setRound(IntervalTabata.currentRound); \n            setDone(true);\n        };\n        \n        updateInterval();\n        setProgressTimerA(timerA.percentComplete);\n        setSecondsTimerA(timerA.currentSeconds);\n        setProgressTimerB(timerB.percentComplete);\n        setSecondsTimerB(timerB.currentSeconds);\n\n\n        // Needed to keep tooltips after component mount/unmount\n        ReactTooltip.rebuild();\n\n        return () => {\n            // stop and remove intervals on unmount\n            IntervalTabata.clear(false);\n            IntervalTabata.clean();\n        }\n    }, []);\n\n    useEffect(()=>{\n        // Needed to keep tooltips after component mount/unmount\n        ReactTooltip.rebuild();\n    },[isDone])\n\n    const start = () => { IntervalTabata.start(false); setPaused(true); setEditMode(false); setDone(false); };\n    const pause = () => { IntervalTabata.clear(false); setPaused(false); };\n    const reset = () => { pause(); IntervalTabata.reset(); updateInterval(); };\n    const fastForward = () => { IntervalTabata.finishCurrent(); if(!paused) pause(); }\n    const toggleEditMode = () => { pause(); IntervalTabata.reset(); setEditMode(!editMode); };\n    const updateRound = (value) => { IntervalTabata.rounds = value; updateInterval(); }\n    const runAgain = () => { reset(); setDone(false); }\n\n    const title = \"Tabata\";\n\n    return <TabataContext.Provider\n        value={{\n            paused,\n            start,\n            pause,\n            reset,\n            fastForward,\n            toggleEditMode,\n            updateRound,\n            runAgain,\n            editMode,\n            IntervalTabata,\n            title,\n            currentProgress,\n            currentRound,\n            progressRound,\n            progressTimerB,\n            progressTimerA,\n            secondsTimerB,\n            secondsTimerA,\n            timerA,\n            timerB,\n            isDone\n        }}>\n        {children}\n    </TabataContext.Provider>\n}\n\nexport default TabataProvider;","import { useContext } from \"react\";\nimport Panel from \"./../generic/Panel/Panel\";\nimport ProgressCircle from \"./../generic/ProgressCircle/ProgressCircle\";\nimport TimeComponent from \"../generic/TimeComponent/TimeComponent\";\nimport TabataProvider, { TabataContext } from './context/TabataContext';\nimport { ButtonsPanel, CongratsPanel } from '../../utils/helpers';\nimport DisplayTime from \"../generic/DisplayTime/DisplayTime\";\nimport \"./Tabata.scss\";\n\nconst Tabata = () => {\n\n  const { paused, start, pause, reset, fastForward, editMode, toggleEditMode,\n    currentProgress, currentRound, progressRound, progressTimerB, updateRound,\n    progressTimerA, timerA, timerB, isDone, runAgain } = useContext(TabataContext);\n\n  const showComponents = {\n    hours: false,\n    minutes: true,\n    seconds: true,\n    milliseconds: false\n  }\n\n  return <Panel>\n    <ProgressCircle progress={currentProgress} size=\"xl\" thickness=\"sm\" className=\"timer\">\n      <div className=\"tabata\">\n        <div>\n          <ProgressCircle progress={progressRound} size=\"sm\" thickness=\"sm\" className=\"tiny-timer\">\n            <TimeComponent label=\"round\"\n              prependZero={true}\n              value={currentRound}\n              readOnly={!editMode}\n              onValueChange={e => { updateRound(e); }}></TimeComponent>\n          </ProgressCircle>\n        </div>\n        <div className=\"tabata-progress-panel\">\n          <ProgressCircle progress={progressTimerA} size=\"sm\" thickness=\"sm\" className=\"tiny-timer\">\n            <div className=\"tabata-progress-wrapper\">\n              <span className=\"tabata-label\">work</span>\n              <DisplayTime timer={timerA} className=\"small p-t-0\" readOnly={!editMode} showComponents={showComponents}\n                triggerOnFinishedOnUnmount={false}\n              ></DisplayTime>\n            </div>\n          </ProgressCircle>\n          <ProgressCircle progress={progressTimerB} size=\"sm\" thickness=\"sm\" className=\"tiny-timer\">\n            <div className=\"tabata-progress-wrapper\">\n              <span className=\"tabata-label\">rest</span>\n              <DisplayTime timer={timerB} className=\"small p-t-0\" readOnly={!editMode}\n                showComponents={showComponents}\n                triggerOnFinishedOnUnmount={false}\n              ></DisplayTime>\n            </div>\n          </ProgressCircle>\n        </div>\n      </div>\n    </ProgressCircle>\n    {!isDone && ButtonsPanel(paused, start, pause, reset, fastForward, toggleEditMode, editMode)}\n\n    {CongratsPanel(isDone, runAgain)}\n  </Panel>;\n}\n\nconst TabataTimer = () => {\n  return (<TabataProvider>\n    <Tabata />\n  </TabataProvider>)\n};\n\nexport default TabataTimer; ","import React from 'react';\nimport Stopwatch from \"../../components/timers/Stopwatch\";\nimport Countdown from \"../../components/timers/Countdown\";\nimport XY from \"../../components/timers/XY\";\nimport Tabata from \"../../components/timers/Tabata\";\nimport { usePersistedState } from '../../utils/helpers';\n\nexport const TimersViewContext = React.createContext({});\n\nconst TimersViewProvider = ({ children }) => {\n    const [timerIndex, setTimerIndex] = usePersistedState(\"selectedTimer\", 0);\n    const timers = [\n        { title: \"Stopwatch\", C: <Stopwatch title={\"Stopwatch\"} /> },\n        { title: \"Countdown\", C: <Countdown title={\"Countdown\"} /> },\n        { title: \"XY\", C: <XY title={\"XY\"} /> },\n        { title: \"Tabata\", C: <Tabata title={\"Tabata\"} /> },\n    ];\n    return <TimersViewContext.Provider\n        value={{\n            timers,\n            timerIndex,\n            setTimerIndex\n        }}>\n        {children}\n    </TimersViewContext.Provider>\n}\n\nexport default TimersViewProvider;","import TimersViewProvider, { TimersViewContext } from './context/TimersViewContext';\nimport { useContext } from \"react\";\nimport Button from '../components/generic/Button/Button';\nimport \"./TimersView.scss\";\n\nconst App = () => {\n  const { timers, timerIndex, setTimerIndex } = useContext(TimersViewContext);\n  const currentTimer = () => {\n    return timers.filter((timers, index) => index === timerIndex)[0].C;\n  }\n  return (\n    <div className=\"grid typescale-md-major-third grid-col-span-12\">\n      <div className=\"col-span-12 buttons m-t-4\">\n        {timers.map((timer, index) => (\n          <Button onButtonClick={() => { setTimerIndex(index) }}\n            className={[\"weight-500 p-x-3 p-y-1 bold\",\n              index === timerIndex ? \"selected text-dark\" : \"\"].join(\" \")}\n            key={index}\n          >{timer.title}</Button>\n        ))}\n      </div>\n      { currentTimer() }\n    </div>\n  );\n}\n\nconst AppProvider = () => {\n  return (<TimersViewProvider>\n    <App />\n  </TimersViewProvider>)\n};\n\nexport default AppProvider;\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport DocumentationView from \"./views/DocumentationView\";\nimport TimersView from \"./views/TimersView\";\nimport 'material-icons/iconfont/material-icons.css';\n\n// Source: https://github.com/rokmesojedec/roKit\n//This Framework was developed by me\nimport \"./assets/rokit/dist/roKit.css\";\nimport \"./style/main.scss\";\nimport MatIcon from \"./components/generic/MatIcon\";\n\nfunction App() {\n  return (\n    <div\n      className=\"\n          p-0 \n          typescale-minor-second \n          typescale-sm-major-second \n          typescale-xl-minor-third \n          children-p-x-sm-10 \n          children-p-x-4\n          children-p-y-8\"\n    >\n      <Router>\n        <header className=\"p-y-0 slide-down-delay-0 fixed full-width z-3 top text-light\">\n          <nav className=\"p-lg-0 nav-flex nav-main typescale-minor-second max-width-center-xxl m-y-1\">\n            <h1 className=\"nowrap\" href=\"index.html\">\n              Rok's CSCI E39 Assignment #2\n            </h1>\n            <ul className=\"hover-light children-p-2 text-light\">\n              <li>\n                <Link to=\"/\"><MatIcon>timer</MatIcon> Timers</Link>\n              </li>\n              <li>\n                <Link to=\"/docs\"><MatIcon>description</MatIcon> Documentation</Link>\n              </li>\n            </ul>\n          </nav>\n        </header>\n\n        <section className=\"max-width-center-xxl p-b-0 m-b-0\">\n          <Switch>\n            <Route path=\"/docs\">\n              <DocumentationView />\n            </Route>\n            <Route path=\"/\">\n              <TimersView />\n            </Route>\n          </Switch>\n        </section>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport ReactTooltip from 'react-tooltip';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n    <ReactTooltip place=\"bottom\" type=\"info\" effect=\"solid\" delayShow={600} />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}